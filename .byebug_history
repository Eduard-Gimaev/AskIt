continue
extname = File.extname(filename)
filename = blob.filename.to_s
 blob = ActiveStorage::Blob.find_by(key: blob_key)
extname = File.extname(blob_key)
puts "Downloaded file: #{blob_key}"
file_uploaded
extname
continue
extension = File.extname(filename)
filename = blob.filename.to_s
blob = ActiveStorage::Blob.find_by(key: blob_key)
uts "Blob key: #{blob_key}"
blob_key
exit
archive_key.type
archive_key
process_zip_file(file_contents)
file_contents
conitnue
continue
exit
UserBulkImportJob.perform_later(blob_key, current_user)
UserBulkImportJob
current_user.id
current_user
params[:file]
params[:file].present?
file
blob_key
continue
exit
render 'shared/errors', resource: @user
@user
exit
continue
render 'shared/errors_resource_entity', resource: f.object, resource_entity: :body
commentable
f.object.errors
f.object
comment
render 'shared/errors', resource: comment
render 'shared/errors', resource: f.object
 <%= render 'shared/errors', resource: f.object %>
continue
f.object
continue
f.object
continue
f.object
comment
commentable.comments
commentable.errors
commentable.answer
commentable.question
commentable
comment
resources.comment
exit
commentable
continue
exit
continue
exit
session[:locale] = I18n.locale
session[:locale] = I18n.locale if I18n.locale != I18n.default_locale||params[:locale] 
I18n.locale
session[:locale] = I18n.locale if I18n.locale != I18n.default_locale
session[:locale]
I18n.locale
continue
set_locale_path(I18n.locale)
set_locale_path
url: set_locale_path
I18n.locale
continue
I18n.locale
local
exit
file_contents
workbook = RubyXL::Parser.parse_buffer(file_contents)
continue
exit
 "answer-#{@answer.id}"
answer-#{@answer.id}
 @answer.id
